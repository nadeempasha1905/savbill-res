CREATE OR REPLACE
PROCEDURE GET_SBD_BILLING_EFFICIENCY(CUR OUT SYS_REFCURSOR, P_GROUP_TYPE IN VARCHAR2, P_LOCATION_CODE IN VARCHAR2, P_MR_CODE IN VARCHAR2, P_TRFS IN VARCHAR2, P_FROM_DT IN VARCHAR2, P_TO_DT IN VARCHAR2, P_HEADER IN BOOLEAN)
IS   
 
 E 	  NUMBER;
 STR  VARCHAR2(4000);

BEGIN

	SELECT NVL(LENGTH(P_GROUP_TYPE||P_LOCATION_CODE||P_MR_CODE||P_TRFS||P_FROM_DT||P_TO_DT),0) INTO E FROM DUAL; 
		
	IF E>0 THEN
	
      		
			STR :=' WITH T AS
					(SELECT  HDD_MTR_RDR_CD MRCODE,  TM_SDESCR TRF, COUNT(DISTINCT HDD_RR_NO||HDD_BILL_DT) TOBEBILLED, COUNT(DISTINCT HUD_RR_NO||HUD_BILL_DT) BILLED,
					COUNT(DISTINCT HDD_RR_NO||HDD_BILL_DT) - COUNT(DISTINCT HUD_RR_NO||HUD_BILL_DT) NOTBILLED,
					(CASE WHEN NVL(COUNT(DISTINCT HDD_RR_NO||HDD_BILL_DT),0) = 0 THEN 0 ELSE ROUND((COUNT(DISTINCT HUD_RR_NO||HUD_BILL_DT)/COUNT(DISTINCT HDD_RR_NO||HDD_BILL_DT))*100,2) END )||''%'' BILL_EFF,
					COUNT(DISTINCT HUD_RR_NO||HUD_BILL_DT) -
					SUM(CASE WHEN HUD_MTR_RDG_STS = ''D'' THEN 1 ELSE 0 END) -
					SUM(CASE WHEN HUD_MTR_RDG_STS = ''M'' THEN 1 ELSE 0 END) -
					SUM(CASE WHEN HDD_INSTAL_STS = 10 THEN 1 ELSE 0 END) -
					SUM(CASE WHEN HDD_DC_FLG = ''Y'' AND HUD_MTR_RDG_STS NOT IN (''D'',''M'') THEN 1 ELSE 0 END) NOR,
					
					SUM(CASE WHEN HUD_MTR_RDG_STS = ''D'' THEN 1 ELSE 0 END) DL,
					SUM(CASE WHEN HUD_MTR_RDG_STS = ''M'' THEN 1 ELSE 0 END) MNR,
					SUM(CASE WHEN HDD_INSTAL_STS = 10 THEN 1 ELSE 0 END) VACANT,
					SUM(CASE WHEN HDD_DC_FLG = ''Y'' AND HUD_MTR_RDG_STS NOT IN (''D'',''M'') THEN 1 ELSE 0 END) DC
					
					FROM HHD_DOWNLOAD_DATA
					
					LEFT OUTER JOIN (SELECT * FROM HHD_UPLOAD_DATA WHERE SUBSTR(HUD_RR_NO,1,7) = '''||P_LOCATION_CODE||''' AND HUD_BILL_DT BETWEEN TO_DATE('''||P_FROM_DT||''',''DD/MM/YYYY'') AND  TO_DATE('''||P_TO_DT||''',''DD/MM/YYYY'') AND NVL(HUD_BILLED_STS,''N'') = ''Y'' )
					ON HUD_RR_NO = HDD_RR_NO AND HUD_BILL_DT = HDD_BILL_DT
					
					LEFT OUTER JOIN TRF_MASTER ON TM_TRF_CODE = HDD_TRF_CODE
					
					WHERE HDD_LOC_CD LIKE '''||P_LOCATION_CODE||'%'' 
					AND HDD_BILL_DT BETWEEN TO_DATE('''||P_FROM_DT||''',''DD/MM/YYYY'') AND  TO_DATE('''||P_TO_DT||''',''DD/MM/YYYY'')';
			
			IF LENGTH(P_MR_CODE) > 0 THEN                                				
				STR := STR || ' AND HDD_MTR_RDR_CD = '''||P_MR_CODE||''' ';
			END IF;	
			
			IF LENGTH(P_TRFS) > 0 THEN
				STR := STR ||' AND HDD_TRF_CODE IN ('||P_TRFS||') ';
			END IF;		
			
					
			STR := STR ||' GROUP BY HDD_MTR_RDR_CD, TM_SDESCR
					       ORDER BY HDD_MTR_RDR_CD, TM_SDESCR) ';
					
			IF P_GROUP_TYPE = 'MR' THEN
					
					STR := STR || ' SELECT MRCODE, NULL TRF, TOBEBILLED, BILLED, NOTBILLED, BILL_EFF, NOR, DL, MNR, VACANT, DC 
									FROM
								    (SELECT * FROM T
									UNION
									SELECT MRCODE, ''Total:'' TRF, SUM(TOBEBILLED) TOBEBILLED, SUM(BILLED) BILLED, SUM(NOTBILLED) NOTBILLED,
									(CASE WHEN SUM(TOBEBILLED) = 0 THEN 0 ELSE ROUND((SUM(BILLED)/SUM(TOBEBILLED))*100,2) END)||''%'' BILL_EFF,
									SUM(NOR) NOR, SUM(DL) DL, SUM(MNR) MNR, SUM(VACANT) VACANT, SUM(DC) DC
									FROM T
									GROUP BY MRCODE)
									WHERE TRF = ''Total:'' '; 
			ELSE   
			
					STR := STR || ' SELECT * FROM T
									UNION
									SELECT MRCODE, ''Total:'' TRF, SUM(TOBEBILLED) TOBEBILLED, SUM(BILLED) BILLED, SUM(NOTBILLED) NOTBILLED,
									(CASE WHEN SUM(TOBEBILLED) = 0 THEN 0 ELSE ROUND((SUM(BILLED)/SUM(TOBEBILLED))*100,2) END)||''%'' BILL_EFF,
									SUM(NOR) NOR, SUM(DL) DL, SUM(MNR) MNR, SUM(VACANT) VACANT, SUM(DC) DC
									FROM T
									GROUP BY MRCODE '; 			
			
			END IF;
					
	        STR:=' SELECT ROWNUM ROW_NO,A.* FROM ('||STR||') A';          
		
		   	OPEN cur FOR STR;
		    --OPEN cur FOR select str from dual;
	   	ELSE    
	   	
	   	    OPEN cur FOR select 'Invalid input' AS RESP from dual; 
	   	    
	   	END IF;   
	   	
	   	--VAR CUR REFCURSOR;
	   	--EXEC GET_SBD_BILLING_EFFICIENCY(:CUR, 'MR', '2110105', '', '', '18/07/2013', '18/07/2013', FALSE)


END GET_SBD_BILLING_EFFICIENCY;

/